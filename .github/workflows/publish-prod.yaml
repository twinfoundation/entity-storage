name: Publish Production

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Which package to publish'
        required: true
        type: choice
        options:
          - entity-storage-models
          - entity-storage-connector-memory
          - entity-storage-connector-file
          - entity-storage-connector-scylladb
          - entity-storage-connector-dynamodb
          - entity-storage-service
          - entity-storage-rest-client
          - entity-storage-connector-gcp-firestore
          - entity-storage-connector-cosmosdb
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    if: github.ref == 'refs/heads/main'

    env:
      TEST_MNEMONIC: ${{ secrets.TEST_MNEMONIC }}

    services:
      scylladb:
        image: scylladb/scylla:5.4.9
        ports:
          - 9042:9042

      dynamodb:
        image: amazon/dynamodb-local:latest
        ports:
          - 8000:8000

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      # TODO: Remove once we have a way to pass flags in the services section
      - name: Start Firestore Emulator
        run: |
          docker run -d --name twin-entity-storage-firestore -p 8080:8080 gcr.io/google.com/cloudsdktool/cloud-sdk:emulators gcloud beta emulators firestore start --host-port=0.0.0.0:8080

      - name: Increase aio-max-nr
        # Increase the maximum number of asynchronous I/O (AIO) requests that can be queued to
        # the kernel. This is necessary for the CosmosDB Emulator to function properly, as it
        # requires a higher limit for I/O operations.
        # Reference: https://man7.org/linux/man-pages/man5/proc.5.html#fs.aio-max-nr
        run: |
          echo 1048576 | sudo tee /proc/sys/fs/aio-max-nr

      - name: Pull CosmosDB Emulator Docker Image
        run: |
          docker pull mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest

      - name: Run CosmosDB Emulator
        run: |
          docker run \
            --publish 8081:8081 \
            --publish 10250-10255:10250-10255 \
            --name twin-entity-cosmos \
            --detach \
            --platform=linux/amd64 --memory=3g --cpus=2.0 \
            mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest

      - name: Wait for CosmosDB Emulator to be Ready
        run: |
          for i in {1..30}; do
            if nc -zv localhost 8081; then
              echo "CosmosDB emulator is ready!"
              break
            fi
            echo "Waiting for CosmosDB emulator to be ready..."
            sleep 5
          done

      - name: Remove Mono-Repo Node Modules
        run: |
          rm package.json
          rm package-lock.json

      - name: Check package version does not contain -next
        run: |
          cd packages/${{ github.event.inputs.package }}
          PACKAGE_VERSION=$(cat package.json | jq '.version' | tr -d '"')
          echo Package Version $PACKAGE_VERSION
          if [[ $PACKAGE_VERSION == *"-next"* ]]; then
            echo "Error: package version contains -next"
            exit 1
          fi

      - name: Run Dist
        run: |
          cd packages/${{ github.event.inputs.package }}
          npm install
          npm run dist

      - name: Cleanup package properties
        run: |
          cd packages/${{ github.event.inputs.package }}
          npm pkg delete scripts
          npm pkg delete devDependencies

      - name: Publish
        run: |
          cd packages/${{ github.event.inputs.package }}
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
